<?xml version="1.0" encoding="utf-8"?>
<project name="Episim-Simulator" default="all" basedir="." >
	<property name="launch4j.dir" location="C:/Program Files/Launch4j"/>
	<property environment="env"/>
	<property name="buildirectoryname" value="EpisimDist"/>
	<property name="src" value="./src"/>
	<property name="buildres" value="./buildresources"/>
	<property name="build" value="EpisimSimulator"/>

	<property name="lib" value="./lib"/>
	<property name="config" value="./config"/>

	<property name="destjarfile" value="Simulator.jar"/>
	<property name="builddirectory" value="./${buildirectoryname}"/>
	<property name="tempdirectoryname" value="tmp"/>
	<property name="currentbuild" value="./${buildirectoryname}/${tempdirectoryname}"/>

	<property name="launch4JEpisimConfig" value="launch4jconfig_simulator.xml"/>
	<property name="launch4JInstallerConfig" value="launch4jconfig_installer.xml"/>
	<property name="buildInstallerBatch" value="buildinstaller.bat"/>


	<!-- properties of the manifest file -->
	<property name="author" value="Thomas Suetterlin"/>
	<property name="version" value="1.1.1"/>
	<property name="vendor" value="Hamamatsu TIGA Center"/>
	<property name="title" value="Episim Simulator"/>
	<property name="main" value="sim.app.episim.gui.EpidermisSimulator"/>
	<property name="splash" value="splash.jpg"/>
	<property name="classpath" value="."/>

	<property name="iconname" value="start.ico"/>
	<property name="EpisimSimulatorExe" value="EpisimSimulator.exe"/>
	<property name="EpisimSimulatorSetupExe" value="EpisimSimulatorSetup.exe"/>
	
	<property name="linuxJRE" value="jre.zip"/>
	<property name="linuxTar" value="EpisimSimulator.tar"/>
	<property name="linuxTarGz" value="EpisimSimulator.tar.gz"/>

	<taskdef name="launch4j"
	    classname="net.sf.launch4j.ant.Launch4jTask"
	    classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />


	<!-- ================================= 
          target: init              
         ================================= -->
	<target name="init" description="doing initialization stuff">
		<tstamp/>

	</target>

	<!-- ================================= 
	          target: makedirs              
	         ================================= -->
	<target name="makedirs" depends="init" description="creating all necessary dirs">
		<mkdir dir="${currentbuild}"/>
		<mkdir dir="${currentbuild}/${build}"/>
		<mkdir dir="${currentbuild}/${build}/bin"/>
		<mkdir dir="${currentbuild}/${build}/bin/calculationalgorithms"/>
		<mkdir dir="${currentbuild}/${build}/config"/>
		<mkdir dir="${currentbuild}/${build}/lib"/>
		<mkdir dir="${currentbuild}/${build}/log"/>
		<mkdir dir="${currentbuild}/${build}/jre"/>
	</target>

	<!-- ================================= 
          target: all              
         ================================= -->
	<target name="all" description="The whole Episim Simulator is build">
		<antcall target="finalCleanup"/>
		<!--<antcall target="cleanup"/>		-->
	</target>

	<!-- ================================= 
          target: compile              
         ================================= -->
	<target name="compile" depends="makedirs" description="compiles the simulator">
		<echo>Compiling Episim Simulator</echo>
		<javac  encoding="8859_1"
    	         srcdir="${src}"
    	         destdir="${currentbuild}/${build}/bin"
    	 		 source="1.5"
    	         target="1.5"
    	 		 nowarn="on"	
    	  >
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- ================================= 
          target: copyLibsAndOtherFiles              
         ================================= -->
	<target name="copyLibsAndOtherFiles" depends="compile" description="All necessary libraries and other files are copied">
		<copy todir="${currentbuild}/${build}/bin">
			<fileset dir="${src}">
				<include name="**/*"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}/${build}/lib">
			<fileset dir="${lib}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}/${build}/config">
			<fileset dir="${config}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}/${build}">
			<fileset dir="${buildres}">
				<include name="doc/*"/>
				<include name="jmf/*"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}">
			<fileset dir="${buildres}">
				<include name="*.*"/>
			</fileset>
		</copy>
	</target>

	<!-- ================================= 
          target: createJar              
         ================================= -->
	<target name="createJar" depends="copyLibsAndOtherFiles" description="The JarFile is created">
		<jar destfile="${currentbuild}/${build}/bin/${destjarfile}"  filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="sim.app.episim.gui.EpidermisSimulator"/>
				<attribute name="Class-Path" value="${classpath}"/>
				<attribute name="SplashScreen-Image" value="${splash}"/>
				<attribute name="Built-By" value="${user.name}"/>

				<!-- Information about the program itself -->
				<section name="Episim Modeller">
					<attribute name="Author" value="${author}"/>
					<attribute name="Implementation-Vendor" value="${vendor}"/>
					<attribute name="Implementation-Title" value="${title}"/>
					<attribute name="Implementation-Version" value="${version}"/>
				</section>
			</manifest>
			<fileset dir="${currentbuild}/${build}/bin"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/junit.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/servlet.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/swtgraphics2d.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/itext-2.0.2.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jcommon-1.0.12.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jfreechart-1.0.9.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jfreechart-1.0.9-experimental.jar"/>
		</jar>
	</target>
	<!-- ================================= 
          target: buildEpisimExecutable              
         ================================= -->
	<target name="buildEpisimExecutable" depends="createJar" description="runs launch4J to build the Simulator Windows Executuable">
		<launch4j configFile="${currentbuild}/${launch4JEpisimConfig}" outfile="${currentbuild}/${build}/${EpisimSimulatorExe}"/>
	</target>
	<!-- ================================= 
	     target: cleanupBinFolder              
	     ================================= -->
	<target name="cleanupBinFolder" depends ="buildEpisimExecutable" description="deletes the temporary stuff">
		<delete includeemptydirs="true" verbose="false">
			<fileset dir="${currentbuild}/${build}/bin" defaultexcludes="no">
				<include name="**/*"/>
				<exclude name="calculationalgorithms/**/*"/>
				<exclude name="**/${destjarfile}"/>
			</fileset>
		</delete>
	</target>


	<!-- ================================= 
          target: copyJDK_Windows              
         ================================= -->
	<target name="copyJDK_Windows" depends="cleanupBinFolder" description="copies the most recent JDK to the jre folder">
		<echo message="${env.JAVA_HOME}"/>
		<copy todir="${currentbuild}/${build}/jre">
			<fileset dir="${env.JAVA_HOME}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<!-- ================================= 
          target: buildInstallerJar              
         ================================= -->
	<target name="buildInstallerJar" depends="copyJDK_Windows" description="builds the installer jar">
		<exec dir="." executable="cmd">
			<arg line="/c compile ${basedir}\${buildirectoryname}\${tempdirectoryname}\install-skript.xml -b ${basedir}\${buildirectoryname}\${tempdirectoryname} -o ${basedir}\${buildirectoryname}\${tempdirectoryname}\install.jar -k standard"/>
		</exec>
	</target>

	<!-- ================================= 
	     target: buildInstallerExecutable             
	     ================================= -->
	<target name="buildInstallerExecutable" depends="buildInstallerJar" description="builds the installer jar">
		<launch4j configFile="${currentbuild}/${launch4JInstallerConfig}" outfile="${currentbuild}/${EpisimSimulatorSetupExe}"/>
	</target>

	<!-- ================================= 
		 target: cleanUpAfterWindowsBuild             
		 ================================= -->
	<target name="cleanUpAfterWindowsBuild" depends="buildInstallerExecutable" description="clean up after building the windows installer">
		<delete includeemptydirs="true" verbose="false">
			<fileset dir="${currentbuild}/${build}/doc" defaultexcludes="no">
				<include name="**/*" />
				<exclude name="${iconname}" />
			</fileset>
			<fileset dir="${currentbuild}/${build}/jre" defaultexcludes="no">
				<include name="**/*" />
			</fileset>
			<fileset dir="${currentbuild}/${build}" defaultexcludes="no">
					<include name="jmf/*.*" />
					<include name="jmf" />
			</fileset>
			<fileset dir="${currentbuild}/${build}" defaultexcludes="no">
				<include name="${EpisimSimulatorExe}" />
			</fileset>
			<fileset dir="${currentbuild}" defaultexcludes="no">
				<include name="*.*" />
				<exclude name="${EpisimSimulatorSetupExe}" />
		    </fileset>
		</delete>
	</target>
	
	<!-- ================================= 
	     target: copyLinux              
	     ================================= -->
		<target name="copyLinuxFiles" depends="cleanUpAfterWindowsBuild" description="All necessary files for the Linux build">
					
			<copy todir="${currentbuild}/${build}">
				<fileset dir="${buildres}/linux">
					<include name="*.*"/>
					<exclude name="*.zip"/>
				</fileset>
			</copy>
			<unzip src="${buildres}/linux/${linuxJRE}" dest="${currentbuild}/${build}/jre"/>
		</target>
	<!-- ================================= 
          target: buildLinuxArchive              
         ================================= -->
    <target name="buildLinuxArchive" depends="copyLinuxFiles" description="buildsTheLinuxArchive">
    	<tar longfile="gnu" destfile="${currentbuild}/${linuxTar}">
    		<tarfileset filemode="755" dir="${currentbuild}">
    			<include name="${build}/jre/bin/java"/>
    			<include name="${build}/jre/bin/javac"/>
    			<include name="${build}/EpisimSimulatorStart.sh"/>
    		</tarfileset>
    		<tarfileset dir="${currentbuild}">
    			<include name= "**/*"/>
    		  	<exclude name="${build}/jre/bin/java"/>
    		    <exclude name="${build}/jre/bin/javac"/>
    		    <exclude name="${build}/EpisimSimulatorStart.sh"/>
    			<exclude name="*.*"/>
    		</tarfileset>
    	</tar>
    	
    	<gzip destfile="${currentbuild}/${linuxTarGz}" src="${currentbuild}/${linuxTar}"/>
    </target>




	<!-- ================================= 
          target: copyBuildFiles              
         ================================= -->
	<target name="copySetupFiles" depends="buildLinuxArchive" description="the final setup files are copied into a directory with a timestamp">
		<tstamp/>
		<mkdir dir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/windows"/>
		<mkdir dir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/linux"/>
		<copy todir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/windows">
			<fileset dir="${currentbuild}">
				<include name="${EpisimSimulatorSetupExe}"/>
			</fileset>
		</copy>
		<copy todir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/linux">
			<fileset dir="${currentbuild}">
				<include name="${linuxTarGz}"/>
			</fileset>
		</copy>
	</target>
	
	<!-- ================================= 
          target: final cleanup              
         ================================= -->
    <target name="finalCleanup" depends="copySetupFiles" description="final cleap after everything was successfully done">
    	<delete includeemptydirs="true" verbose="false">
    		<fileset dir="${currentbuild}" defaultexcludes="no">
    			<include name="**/*" />
    		</fileset>
    		<fileset dir="${builddirectory}" defaultexcludes="no">
    		    <include name="tmp" />
    		</fileset>
    	</delete>
    </target>







</project>