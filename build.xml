<?xml version="1.0" encoding="utf-8"?>
<project name="Episim-Simulator" default="all" basedir="." >
	<property name="launch4j.dir" location="C:/Program Files/Launch4j"/>
	<property environment="env"/>
	<property name="buildirectoryname" value="EpisimDist"/>
	<property name="src" value="./src"/>
	<property name="buildres" value="./buildresources"/>
	<property name="build" value="EpisimSimulator"/>

	<property name="lib" value="./lib"/>
	<property name="config" value="./config"/>

	<property name="destjarfile" value="Simulator.jar"/>
	<property name="builddirectory" value="./${buildirectoryname}"/>
	<property name="tempdirectoryname" value="tmp"/>
	<property name="currentbuild" value="./${buildirectoryname}/${tempdirectoryname}"/>

	<property name="launch4JEpisimConfig" value="launch4jconfig_simulator.xml"/>
	<property name="launch4JInstallerConfig" value="launch4jconfig_installer.xml"/>
	<property name="buildInstallerBatch" value="buildinstaller.bat"/>


	<!-- properties of the manifest file -->
	<property name="author" value="Thomas Suetterlin"/>
	<property name="version" value="1.4.0"/>
	<property name="vendor" value="Hamamatsu TIGA Center"/>
	<property name="title" value="Episim Simulator"/>
	<property name="main" value="sim.app.episim.gui.EpidermisSimulator"/>
	<property name="splash" value="splash.jpg"/>
	<property name="classpath" value=". ../lib/copasi.jar ../lib/copasi_gui.jar"/>

	<property name="iconname" value="start.ico"/>
	<property name="EpisimSimulatorExe" value="EpisimSimulator.exe"/>
	<property name="EpisimSimulatorSetupExe" value="EpisimSimulator_Windows_Setup_32-bit.exe"/>
	
	<property name="linuxJRE32bit" value="jre_32bit.zip"/>
	<property name="linuxJRE64bit" value="jre_64bit.zip"/>
	<property name="linuxTar" value="EpisimSimulator.tar"/>
	<property name="linuxTarGz32bit" value="EpisimSimulator_Linux_32-bit_add_native_libs.tar.gz"/>
	<property name="linuxTarGz64bit" value="EpisimSimulator_Linux_64-bit_add_native_libs.tar.gz"/>
	<property name="macTar" value="EpisimSimulator.tar"/>
	<property name="macTarGz64bit" value="EpisimSimulator_Mac_OSX_64-bit.tar.gz"/>
	<property name="macApp" value="EpisimSimulator.zip"/>
	
	<property name="linuxCopasi" value="copasi_linux.zip"/>
	<property name="winCopasi" value="copasi_windows.zip"/>
	<property name="macCopasi" value="copasi_mac_64bit.zip"/>
	
	<property name="winJogl" value="jogl_windows.zip"/>
	<property name="macJogl" value="jogl_mac_64bit.zip"/>

	<taskdef name="launch4j"
	    classname="net.sf.launch4j.ant.Launch4jTask"
	    classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />


	<!-- ================================= 
          target: init              
         ================================= -->
	<target name="init" description="doing initialization stuff">
		<tstamp/>

	</target>

	<!-- ================================= 
	      target: makedirs              
	     ================================= -->
	<target name="makedirs" depends="init" description="creating all necessary dirs">
		<mkdir dir="${currentbuild}"/>
		<mkdir dir="${currentbuild}/${build}"/>
		<mkdir dir="${currentbuild}/${build}/bin"/>
		<mkdir dir="${currentbuild}/${build}/bin/calculationalgorithms"/>
		<mkdir dir="${currentbuild}/${build}/bin/sendreceive"/>
		<mkdir dir="${currentbuild}/${build}/config"/>
		<mkdir dir="${currentbuild}/${build}/lib"/>
		<mkdir dir="${currentbuild}/${build}/log"/>
		<mkdir dir="${currentbuild}/${build}/jre"/>
	</target>

	<!-- ================================= 
          target: all              
         ================================= -->
	<target name="all" description="The whole Episim Simulator is build">
		<antcall target="finalCleanup"/>
		<!--<antcall target="cleanup"/>		-->
	</target>

	<!-- ================================= 
          target: compile              
         ================================= -->
	<target name="compile" depends="makedirs" description="compiles the simulator">
		<echo>Compiling Episim Simulator</echo>
		<javac  encoding="8859_1"
    	         srcdir="${src}"
    	         destdir="${currentbuild}/${build}/bin"
    	 		 source="1.5"
    	         target="1.5"
    	 		 nowarn="on"	
    	  >
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- ================================= 
          target: copyLibsAndOtherFiles              
         ================================= -->
	<target name="copyLibsAndOtherFiles" depends="compile" description="All necessary libraries and other files are copied">
		<copy todir="${currentbuild}/${build}/bin">
			<fileset dir="${src}">
				<include name="**/*"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}/${build}/lib">
			<fileset dir="${lib}">
				<include name="**/*"/>
				<exclude name="**/classpathconfig.xml"/>
				<exclude name="**/copasi_gui.jar"/>
				<exclude name="**/copasi.jar"/>
				<exclude name="**/CopasiJava.dll"/>
				<exclude name="**/Microsoft.VC80.CRT"/>
				<exclude name="**/Microsoft.VC80.CRT.manifest"/>
				<exclude name="**/msvcm80.dll"/>
				<exclude name="**/msvcp80.dll"/>
				<exclude name="**/msvcr80.dll"/>				
				<exclude name="**/gluegen-rt.dll"/>
				<exclude name="**/gluegen-rt.jar"/>
				<exclude name="**/jogl.dll"/>
				<exclude name="**/jogl.jar"/>
				<exclude name="**/jogl_awt.dll"/>
				<exclude name="**/jogl_cg.dll"/>				
			</fileset>
			<fileset dir="${buildres}">
				<include name="classpathconfig.xml"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}/${build}/config">
			<fileset dir="${config}">
				<include name="**/*"/>
				<exclude name="**/episimconfig.properties"/>
				<exclude name="**/cellvisualization.properties"/>
			</fileset>
			<fileset dir="${buildres}">
				<include name="episimconfig.properties"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}/${build}">
			<fileset dir="${buildres}">
				<include name="doc/*"/>
				<include name="jmf/*"/>
			</fileset>
		</copy>
		<copy todir="${currentbuild}">
			<fileset dir="${buildres}">
				<include name="*.*"/>
			</fileset>
		</copy>
	</target>

	<!-- ================================= 
          target: createJar              
         ================================= -->
	<target name="createJar" depends="copyLibsAndOtherFiles" description="The JarFile is created">
		<jar destfile="${currentbuild}/${build}/bin/${destjarfile}"  filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="sim.app.episim.gui.EpidermisSimulator"/>
				<attribute name="Class-Path" value="${classpath}"/>
				<attribute name="SplashScreen-Image" value="${splash}"/>
				<attribute name="Built-By" value="${user.name}"/>

				<!-- Information about the program itself -->
				<section name="Episim Modeller">
					<attribute name="Author" value="${author}"/>
					<attribute name="Implementation-Vendor" value="${vendor}"/>
					<attribute name="Implementation-Title" value="${title}"/>
					<attribute name="Implementation-Version" value="${version}"/>
				</section>
			</manifest>
			<fileset dir="${currentbuild}/${build}/bin"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/junit.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/servlet.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/swtgraphics2d.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/arpack_combo-0.1.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/mtj-0.9.12.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/netlib-java-0.9.1.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jannealer.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/gnujaxp.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/iText-2.1.5.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jcommon-1.0.16.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jfreechart-1.0.13.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${currentbuild}/${build}/lib/jfreechart-1.0.13-experimental.jar"/>
		</jar>
	</target>
	<!-- ================================= 
          target: buildEpisimExecutable              
         ================================= -->
	<target name="buildEpisimExecutable" depends="createJar" description="runs launch4J to build the Simulator Windows Executuable">
		<launch4j configFile="${currentbuild}/${launch4JEpisimConfig}" outfile="${currentbuild}/${build}/${EpisimSimulatorExe}"/>
	</target>
	<!-- ================================= 
	      target: cleanupBinFolder              
	     ================================= -->
	<target name="cleanupBinFolder" depends ="buildEpisimExecutable" description="deletes the temporary stuff">
		<delete includeemptydirs="true" verbose="false">
			<fileset dir="${currentbuild}/${build}/bin" defaultexcludes="no">
				<include name="**/*"/>
				<exclude name="calculationalgorithms/**/*"/>
				<exclude name="sendreceive/**/*"/>
				<exclude name="episimbiomechanics/**/*"/>
				<exclude name="**/${destjarfile}"/>
			</fileset>
		</delete>
	</target>
	
	<!-- ================================= 
		  target: copyCOPASI_Windows              
	 	 ================================= -->
	<target name="copyCOPSASI_Windows" depends="cleanupBinFolder" description="copies the most recent COPASI to the lib folder">
		<unzip src="${buildres}/win/${winCopasi}" dest="${currentbuild}/${build}/lib"/>
		<unzip src="${buildres}/win/${winJogl}" dest="${currentbuild}/${build}/lib"/>
	</target>

	<!-- ================================= 
          target: copyJDK_Windows              
         ================================= -->
	<target name="copyJDK_Windows" depends="copyCOPSASI_Windows" description="copies the most recent JDK to the jre folder">
		<echo message="${env.JAVA_HOME}"/>
		<copy todir="${currentbuild}/${build}/jre">
			<fileset dir="${env.JAVA_HOME}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	

	<!-- ================================= 
          target: buildInstallerJar              
         ================================= -->
	<target name="buildInstallerJar" depends="copyJDK_Windows" description="builds the installer jar">
		<exec dir="." executable="cmd">
			<arg line="/c compile ${basedir}\${buildirectoryname}\${tempdirectoryname}\install-skript.xml -b ${basedir}\${buildirectoryname}\${tempdirectoryname} -o ${basedir}\${buildirectoryname}\${tempdirectoryname}\install.jar -k standard"/>
		</exec>
	</target>

	<!-- ================================= 
	     target: buildInstallerExecutable             
	     ================================= -->
	<target name="buildInstallerExecutable" depends="buildInstallerJar" description="builds the installer jar">
		<launch4j configFile="${currentbuild}/${launch4JInstallerConfig}" outfile="${currentbuild}/${EpisimSimulatorSetupExe}"/>
	</target>

	<!-- ================================= 
		 target: cleanUpAfterWindowsBuild             
		 ================================= -->
	<target name="cleanUpAfterWindowsBuild" depends="buildInstallerExecutable" description="clean up after building the windows installer">
		<delete includeemptydirs="true" verbose="false">
			<fileset dir="${currentbuild}/${build}/doc" defaultexcludes="no">
				<include name="**/*" />
				<exclude name="${iconname}" />
			</fileset>
			<fileset dir="${currentbuild}/${build}/jre" defaultexcludes="no">
				<include name="**/*" />
			</fileset>
			<fileset dir="${currentbuild}/${build}/lib" defaultexcludes="no">
				<include name="**/copasi_gui.jar"/>
				<include name="**/copasi.jar"/>
				<include name="**/CopasiJava.dll"/>				
				<include name="**/Microsoft.VC80.CRT.manifest"/>
				<include name="**/msvcm80.dll"/>
				<include name="**/msvcp80.dll"/>
				<include name="**/msvcr80.dll"/>
				<include name="**/Microsoft.VC80.CRT"/>
				<include name="**/gluegen-rt.dll"/>
				<include name="**/gluegen-rt.jar"/>
				<include name="**/jogl.dll"/>
				<include name="**/jogl.jar"/>
				<include name="**/jogl_awt.dll"/>
				<include name="**/jogl_cg.dll"/>	
			</fileset>
			<fileset dir="${currentbuild}/${build}" defaultexcludes="no">
					<include name="jmf/*.*" />
					<include name="jmf" />
			</fileset>
			<fileset dir="${currentbuild}/${build}" defaultexcludes="no">
				<include name="${EpisimSimulatorExe}" />
			</fileset>
			<fileset dir="${currentbuild}" defaultexcludes="no">
				<include name="*.*" />
				<exclude name="${EpisimSimulatorSetupExe}" />
		    </fileset>
		</delete>
	</target>
	
	<!-- ================================= 
	       target: copyLinuxFiles32bit              
	     ================================= -->
		<target name="copyLinuxFiles32bit" depends="cleanUpAfterWindowsBuild" description="All necessary files for the 32 bit Linux build">					
			<copy todir="${currentbuild}/${build}">
				<fileset dir="${buildres}/linux">
					<include name="*.*"/>
					<exclude name="*.zip"/>
				</fileset>
			</copy>
			<unzip src="${buildres}/linux/${linuxJRE32bit}" dest="${currentbuild}/${build}/jre"/>
		<!--<unzip src="${buildres}/linux/${linuxCopasi}" dest="${currentbuild}/${build}/lib"/>-->
		</target>
	
	<!-- ================================= 
          target: build32bitLinuxArchive              
         ================================= -->
    <target name="build32bitLinuxArchive" depends="copyLinuxFiles32bit" description="buildsTheLinuxArchive">
    	<tar longfile="gnu" destfile="${currentbuild}/${linuxTar}">
    		<tarfileset filemode="755" dir="${currentbuild}">
    			<include name="${build}/jre/bin/java"/>
    			<include name="${build}/jre/bin/javac"/>
    			<include name="${build}/EpisimSimulatorStart.sh"/>
    		</tarfileset>
    		<tarfileset dir="${currentbuild}">
    			<include name= "**/*"/>
    		  	<exclude name="${build}/jre/bin/java"/>
    		    <exclude name="${build}/jre/bin/javac"/>
    		    <exclude name="${build}/EpisimSimulatorStart.sh"/>
    			<exclude name="*.*"/>
    		</tarfileset>
    	</tar>    	
    	<gzip destfile="${currentbuild}/${linuxTarGz32bit}" src="${currentbuild}/${linuxTar}"/>
    </target>
	
	
	<!-- ==================================== 
	     target: cleanUpAfter32bitLinuxBuild              
	     ==================================== -->	
	<target name="cleanUpAfter32bitLinuxBuild" depends="build32bitLinuxArchive" description="clean up after building the 32 bit Linux version">
		<delete includeemptydirs="true" verbose="false">
			<fileset dir="${currentbuild}/${build}/jre" defaultexcludes="no">
				<include name="**/*" />
			</fileset>	
			<fileset dir="${currentbuild}" defaultexcludes="no">
				<include name="${linuxTar}" />
			</fileset>	
		</delete>		
	</target>
	
	<!-- ================================= 
		  target: copyLinuxFiles64bit              
		 ================================= -->
		<target name="copyLinuxFiles64bit" depends="cleanUpAfter32bitLinuxBuild" description="All necessary files for the 64 bit Linux build">			
			<unzip src="${buildres}/linux/${linuxJRE64bit}" dest="${currentbuild}/${build}/jre"/>
		</target>
	
	<!-- ================================= 
	     target: build64bitLinuxArchive              
	     ================================= -->
	    <target name="build64bitLinuxArchive" depends="copyLinuxFiles64bit" description="builds the 64 bit Linux archive">
	    	<tar longfile="gnu" destfile="${currentbuild}/${linuxTar}">
	    		<tarfileset filemode="755" dir="${currentbuild}">
	    			<include name="${build}/jre/bin/java"/>
	    			<include name="${build}/jre/bin/javac"/>
	    			<include name="${build}/EpisimSimulatorStart.sh"/>
	    		</tarfileset>
	    		<tarfileset dir="${currentbuild}">
	    			<include name= "**/*"/>
	    		  	<exclude name="${build}/jre/bin/java"/>
	    		    <exclude name="${build}/jre/bin/javac"/>
	    		    <exclude name="${build}/EpisimSimulatorStart.sh"/>
	    			<exclude name="*.*"/>
	    		</tarfileset>
	    	</tar>	    	
	    	<gzip destfile="${currentbuild}/${linuxTarGz64bit}" src="${currentbuild}/${linuxTar}"/>
	    </target>
	
	<!-- ==================================== 
		 target: cleanUpAfter64bitLinuxBuild              
		 ==================================== -->
		
		<target name="cleanUpAfter64bitLinuxBuild" depends="build64bitLinuxArchive" description="clean up after building the 64 bit Linux version">
			<delete includeemptydirs="true" verbose="false">
				<fileset dir="${currentbuild}/${build}/jre" defaultexcludes="no">
					<include name="**/*" />
				</fileset>
		   <!-- <fileset dir="${currentbuild}/${build}/lib" defaultexcludes="no">
					<include name="copasi.jar" />
					<include name="copasi_gui.jar" />
					<include name="libCopasiJava.so" />
					<include name="libCopasiJava.so.1" />
					<include name="libCopasiJava.so.1.0" />
					<include name="libCopasiJava.so.1.0.0" />
					<include name="LicenseCOM.txt.h" />
					<include name="LicenseDE.txt.h" />
					<include name="LicenseUS.txt.h" />
				</fileset> -->
				<fileset dir="${currentbuild}" defaultexcludes="no">
					<include name="${linuxTar}" />
				</fileset>
				<fileset dir="${currentbuild}/${build}" defaultexcludes="no">
					<include name="jre" />
					<include name="*.*" />
				</fileset>
			</delete>
		</target>
	
	<!-- ================================= 
		  target: copyMacFiles64bit              
		 ================================= -->
		<target name="copyMacFiles64bit" depends="cleanUpAfter64bitLinuxBuild" description="All necessary files for the 64 bit Mac build">					
			<unzip src="${buildres}/mac/${macApp}" dest="${currentbuild}/${build}"/>
			<unzip src="${buildres}/mac/${macCopasi}" dest="${currentbuild}/${build}/lib"/>
			<unzip src="${buildres}/mac/${macJogl}" dest="${currentbuild}/${build}/lib"/>
		</target>
	
	<!-- ====================================== 
		  target: build64bitMacArchive              
		 ====================================== -->
		<target name="build64bitMacArchive" depends="copyMacFiles64bit" description="builds the 64 bit Mac archive">
		   	<tar longfile="gnu" destfile="${currentbuild}/${macTar}">
		   		<tarfileset dir="${currentbuild}">
		   			<include name= "**/*"/>
		   			<exclude name="*.*"/>
		   		</tarfileset>
		   	</tar>	    	
		   	<gzip destfile="${currentbuild}/${macTarGz64bit}" src="${currentbuild}/${macTar}"/>
		 </target>
	


	<!-- ================================= 
          target: copyBuildFiles              
         ================================= -->
	<target name="copySetupFiles" depends="build64bitMacArchive" description="the final setup files are copied into a directory with a timestamp">
		<tstamp/>
		<mkdir dir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/windows"/>
		<mkdir dir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/linux"/>
		<mkdir dir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/mac"/>
		<copy todir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/windows">
			<fileset dir="${currentbuild}">
				<include name="${EpisimSimulatorSetupExe}"/>
			</fileset>
		</copy>
		<copy todir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/linux">
			<fileset dir="${currentbuild}">
				<include name="${linuxTarGz32bit}"/>
				<include name="${linuxTarGz64bit}"/>
			</fileset>
		</copy>
		<copy todir="${builddirectory}/${DSTAMP}-${TSTAMP}-EpisimBuild/mac">
			<fileset dir="${currentbuild}">
				<include name="${macTarGz64bit}"/>
			</fileset>
		</copy>
	</target>
	
	<!-- ================================= 
          target: final cleanup              
         ================================= -->
    <target name="finalCleanup" depends="copySetupFiles" description="final cleap after everything was successfully done">
    	<delete includeemptydirs="true" verbose="false">
    		<fileset dir="${currentbuild}" defaultexcludes="no">
    			<include name="**/*" />
    		</fileset>
    		<fileset dir="${builddirectory}" defaultexcludes="no">
    		    <include name="tmp" />
    		</fileset>
    	</delete>
    </target>
</project>